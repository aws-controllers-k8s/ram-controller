// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// PermissionSpec defines the desired state of Permission.
type PermissionSpec struct {

	// Specifies the name of the customer managed permission. The name must be unique
	// within the Amazon Web Services Region.
	// +kubebuilder:validation:Required
	Name *string `json:"name"`
	// A string in JSON format string that contains the following elements of a
	// resource-based policy:
	//
	//   - Effect: must be set to ALLOW.
	//
	//   - Action: specifies the actions that are allowed by this customer managed
	//     permission. The list must contain only actions that are supported by the
	//     specified resource type. For a list of all actions supported by each resource
	//     type, see Actions, resources, and condition keys for Amazon Web Services
	//     services (https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)
	//     in the Identity and Access Management User Guide.
	//
	//   - Condition: (optional) specifies conditional parameters that must evaluate
	//     to true when a user attempts an action for that action to be allowed.
	//     For more information about the Condition element, see IAM policies: Condition
	//     element (https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html)
	//     in the Identity and Access Management User Guide.
	//
	// This template can't include either the Resource or Principal elements. Those
	// are both filled in by RAM when it instantiates the resource-based policy
	// on each resource shared using this managed permission. The Resource comes
	// from the ARN of the specific resource that you are sharing. The Principal
	// comes from the list of identities added to the resource share.
	// +kubebuilder:validation:Required
	PolicyTemplate *string `json:"policyTemplate"`
	// Specifies the name of the resource type that this customer managed permission
	// applies to.
	//
	// The format is <service-code>:<resource-type> and is not case sensitive. For
	// example, to specify an Amazon EC2 Subnet, you can use the string ec2:subnet.
	// To see the list of valid values for this parameter, query the ListResourceTypes
	// operation.
	// +kubebuilder:validation:Required
	ResourceType *string `json:"resourceType"`
	// Specifies a list of one or more tag key and value pairs to attach to the
	// permission.
	Tags []*Tag `json:"tags,omitempty"`
}

// PermissionStatus defines the observed state of Permission
type PermissionStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// The date and time when the permission was created.
	// +kubebuilder:validation:Optional
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
	// Specifies whether the version of the managed permission used by this resource
	// share is the default version for this managed permission.
	// +kubebuilder:validation:Optional
	DefaultVersion *bool `json:"defaultVersion,omitempty"`
	// Indicates what features are available for this resource share. This parameter
	// can have one of the following values:
	//
	//    * STANDARD – A resource share that supports all functionality. These
	//    resource shares are visible to all principals you share the resource share
	//    with. You can modify these resource shares in RAM using the console or
	//    APIs. This resource share might have been created by RAM, or it might
	//    have been CREATED_FROM_POLICY and then promoted.
	//
	//    * CREATED_FROM_POLICY – The customer manually shared a resource by attaching
	//    a resource-based policy. That policy did not match any existing managed
	//    permissions, so RAM created this customer managed permission automatically
	//    on the customer's behalf based on the attached policy document. This type
	//    of resource share is visible only to the Amazon Web Services account that
	//    created it. You can't modify it in RAM unless you promote it. For more
	//    information, see PromoteResourceShareCreatedFromPolicy.
	//
	//    * PROMOTING_TO_STANDARD – This resource share was originally CREATED_FROM_POLICY,
	//    but the customer ran the PromoteResourceShareCreatedFromPolicy and that
	//    operation is still in progress. This value changes to STANDARD when complete.
	// +kubebuilder:validation:Optional
	FeatureSet *string `json:"featureSet,omitempty"`
	// Specifies whether the managed permission associated with this resource share
	// is the default managed permission for all resources of this resource type.
	// +kubebuilder:validation:Optional
	IsResourceTypeDefault *bool `json:"isResourceTypeDefault,omitempty"`
	// The date and time when the permission was last updated.
	// +kubebuilder:validation:Optional
	LastUpdatedTime *metav1.Time `json:"lastUpdatedTime,omitempty"`
	// The type of managed permission. This can be one of the following values:
	//
	//    * AWS_MANAGED – Amazon Web Services created and manages this managed
	//    permission. You can associate it with your resource shares, but you can't
	//    modify it.
	//
	//    * CUSTOMER_MANAGED – You, or another principal in your account created
	//    this managed permission. You can associate it with your resource shares
	//    and create new versions that have different permissions.
	// +kubebuilder:validation:Optional
	PermissionType *string `json:"permissionType,omitempty"`
	// The current status of the permission.
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty"`
	// The version of the permission associated with this resource share.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty"`
}

// Permission is the Schema for the Permissions API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type Permission struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PermissionSpec   `json:"spec,omitempty"`
	Status            PermissionStatus `json:"status,omitempty"`
}

// PermissionList contains a list of Permission
// +kubebuilder:object:root=true
type PermissionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Permission `json:"items"`
}

func init() {
	SchemeBuilder.Register(&Permission{}, &PermissionList{})
}
